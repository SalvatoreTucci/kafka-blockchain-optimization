networks:
  kafka-net:
    driver: bridge

volumes:
  kafka-data:
  zk-data:
  prometheus-data:
  grafana-data:

services:
  # Zookeeper con configurazione Windows-friendly
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - kafka-net
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    volumes:
      - zk-data:/var/lib/zookeeper/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "echo srvr | nc localhost 2181"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Kafka SEMPLICE (senza configurazioni problematiche)
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    networks:
      - kafka-net
    ports:
      - "9092:9092"
      - "9094:9094"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9094
      KAFKA_JMX_HOSTNAME: localhost
      
      # Configurazione Windows-friendly
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
      
      # Memory settings per Windows
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
      
    volumes:
      - kafka-data:/var/lib/kafka/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s

  # Test runner con Python e dependencies
  test-runner:
    image: python:3.9-slim
    container_name: test-runner
    networks:
      - kafka-net
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - .:/workspace
      - ./results:/workspace/results
    working_dir: /workspace
    command: |
      sh -c "
      apt-get update && apt-get install -y netcat-traditional curl &&
      pip install kafka-python==2.0.2 requests==2.31.0 &&
      tail -f /dev/null
      "
    restart: unless-stopped

  # Prometheus (opzionale)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - kafka-net
    ports:
      - "9090:9090"
    volumes:
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana (opzionale)
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - kafka-net
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
